// <auto-generated />
using System;
using System.Collections.Generic;
using DC.WebApi.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DC.WebApi.Migrations
{
    [DbContext(typeof(DCDbContext))]
    [Migration("20230112190958_changetimetypeagainagain")]
    partial class changetimetypeagainagain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DC.WebApi.Core.Data.Entities.EmployeeEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RefStreet1")
                        .HasColumnType("text");

                    b.Property<string>("RefStreet2")
                        .HasColumnType("text");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("UserEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.HasIndex("Name", "LastName")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DC.WebApi.Core.Data.Entities.PropertyEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BtwnStreet1")
                        .HasColumnType("text");

                    b.Property<string>("BtwnStreet2")
                        .HasColumnType("text");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<float>("CostService")
                        .HasColumnType("real");

                    b.Property<float>("HoursService")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<List<string>>("ReferencePhotosList")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("DC.WebApi.Core.Data.Entities.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Password")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("bytea");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsActive = true,
                            Password = new byte[] { 118, 65, 252, 72, 244, 65, 239, 7, 106, 71, 43, 12, 224, 121, 97, 181, 36, 80, 23, 1, 245, 54, 115, 32, 126, 252, 161, 244, 228, 199, 129, 78, 186, 85, 220, 123, 225, 253, 7, 221, 41, 223, 17, 22, 174, 238, 206, 98, 244, 182, 211, 109, 249, 202, 125, 125, 62, 103, 101, 222, 60, 136, 129, 216, 183, 222, 181, 97, 115, 19, 210, 112, 173, 137, 160, 200, 161, 148, 216, 154, 171, 37, 38, 13, 100, 30, 219, 0, 122, 121, 215, 28, 140, 21, 214, 29, 250, 73, 79, 92, 107, 39, 248, 110, 213, 6, 99, 94, 182, 105, 174, 67, 250, 211, 225, 165, 96, 172, 249, 124, 42, 247, 33, 193, 67, 94, 21, 157, 75, 31, 44, 208, 225, 157, 243, 225, 137, 118, 147, 162, 25, 113, 11, 205, 101, 20, 234, 242, 199, 97, 17, 13, 70, 101, 157, 170, 68, 182, 147, 167, 60, 72, 142, 151, 194, 220, 152, 240, 252, 72, 179, 111, 40, 76, 67, 157, 244, 245, 52, 229, 47, 72, 161, 160, 145, 91, 31, 249, 110, 20, 210, 117, 118, 223, 174, 151, 129, 154, 188, 54, 94, 44, 126, 134, 106, 168, 206, 169, 55, 4, 111, 179, 179, 250, 102, 65, 171, 102, 89, 237, 190, 171, 248, 161, 122, 33, 31, 148, 106, 50, 30, 125, 152, 181, 92, 146, 200, 42, 248, 154, 254, 135, 253, 182, 182, 97, 227, 90, 92, 203, 226, 124, 205, 90, 140, 220 },
                            Role = "SuperAdmin",
                            Salt = new byte[] { 219, 86, 152, 95, 176, 41, 6, 137, 65, 236, 45, 36, 181, 114, 126, 105, 212, 93, 36, 9, 183, 42, 59, 178, 154, 240, 224, 63, 67, 248, 77, 186, 240, 155, 163, 49, 183, 237, 138, 160, 28, 192, 70, 174, 255, 125, 185, 110, 172, 229, 162, 252, 50, 181, 71, 84, 162, 224, 226, 81, 120, 245, 85, 40, 168, 7, 209, 168, 47, 114, 204, 39, 184, 74, 159, 38, 117, 166, 220, 54, 255, 173, 190, 140, 157, 158, 63, 76, 135, 97, 69, 249, 98, 21, 69, 37, 134, 231, 174, 243, 112, 148, 90, 223, 246, 34, 37, 175, 4, 33, 125, 86, 81, 217, 106, 223, 211, 104, 68, 122, 170, 179, 240, 63, 135, 56, 198, 253 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("DC.WebApi.Core.Data.Entities.WorkUnitEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("DayToWork")
                        .HasColumnType("integer");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("FinishTime")
                        .HasColumnType("interval");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PropertyId");

                    b.ToTable("WorkUnits");
                });

            modelBuilder.Entity("DC.WebApi.Core.Data.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("DC.WebApi.Core.Data.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("DC.WebApi.Core.Data.Entities.WorkUnitEntity", b =>
                {
                    b.HasOne("DC.WebApi.Core.Data.Entities.EmployeeEntity", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DC.WebApi.Core.Data.Entities.PropertyEntity", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Property");
                });
#pragma warning restore 612, 618
        }
    }
}
